# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := action_before_build
### Rules for action "download_webrtc_libraries_and_headers":
quiet_cmd_binding_gyp_action_before_build_target_download_webrtc_libraries_and_headers = ACTION Downloading WebRTC libraries and headers $@
cmd_binding_gyp_action_before_build_target_download_webrtc_libraries_and_headers = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p node_modules; npm install https://github.com/markandrus/webrtc-libraries-and-headers.git

node_modules/webrtc-libraries-and-headers: obj := $(abs_obj)
node_modules/webrtc-libraries-and-headers: builddir := $(abs_builddir)
node_modules/webrtc-libraries-and-headers: export BUILT_FRAMEWORKS_DIR := ${abs_builddir}
node_modules/webrtc-libraries-and-headers: export BUILT_PRODUCTS_DIR := ${abs_builddir}
node_modules/webrtc-libraries-and-headers: export CONFIGURATION := ${BUILDTYPE}
node_modules/webrtc-libraries-and-headers: export PRODUCT_NAME := action_before_build
node_modules/webrtc-libraries-and-headers: export SDKROOT := /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk
node_modules/webrtc-libraries-and-headers: export SRCROOT := ${abs_srcdir}/
node_modules/webrtc-libraries-and-headers: export SOURCE_ROOT := ${SRCROOT}
node_modules/webrtc-libraries-and-headers: export TARGET_BUILD_DIR := ${abs_builddir}
node_modules/webrtc-libraries-and-headers: export TEMP_DIR := ${TMPDIR}
node_modules/webrtc-libraries-and-headers: TOOLSET := $(TOOLSET)
node_modules/webrtc-libraries-and-headers:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_action_before_build_target_download_webrtc_libraries_and_headers)

all_deps += node_modules/webrtc-libraries-and-headers
action_binding_gyp_action_before_build_target_download_webrtc_libraries_and_headers_outputs := node_modules/webrtc-libraries-and-headers


### Rules for final target.
# Build our special outputs first.
$(obj).target/action_before_build.stamp: | $(action_binding_gyp_action_before_build_target_download_webrtc_libraries_and_headers_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_action_before_build_target_download_webrtc_libraries_and_headers_outputs): | 

$(obj).target/action_before_build.stamp: TOOLSET := $(TOOLSET)
$(obj).target/action_before_build.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/action_before_build.stamp
# Add target alias
.PHONY: action_before_build
action_before_build: $(obj).target/action_before_build.stamp

# Add target alias to "all" target.
.PHONY: all
all: action_before_build

